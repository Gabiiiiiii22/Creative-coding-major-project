const BLOCK = 25;
const BASE_W = 800;
const BASE_H = 800;
const PRESERVE_ASPECT = false;

let sx, sy, ox, oy;

let addHorizontalBar = [];
let addVerticalBar = [];

class Bar {
  constructor(x, y, w, h, type) {
    this.x = x * BLOCK;
    this.y = y * BLOCK;
    this.w = w * BLOCK;
    this.h = h * BLOCK;
    this.type = type;
    this.color = this.assignColor();
  }

  assignColor() {
    const colors = {
      yellow: color(223, 195, 36, 100)
    };
    return colors[this.type] || color(random(255), random(255), random(255));
  }

  display() {
    noStroke();
    fill(this.color); 
    rect(ox + this.x * sx, oy + this.y * sy, this.w * sx, this.h * sy);
  }
}

function setup() {
  createCanvas(windowWidth, windowHeight);
  colorMode(RGB);
  noLoop();

  addHorizontalBar = [
    new Bar(0, 22, 32, 1, "yellow"),
    new Bar(0, 26, 32, 1, "yellow"),
    new Bar(0, 29, 12, 1, "yellow"),
    new Bar(0, 17, 32, 1, "yellow"),
    new Bar(0, 14, 21, 1, "yellow"),
    new Bar(24, 14, 8, 1, "yellow"),
    new Bar(0, 10, 24, 1, "yellow"),
    new Bar(0, 5, 32, 1, "yellow"),
    new Bar(4, 2, 3, 1, "yellow"),
    new Bar(0, 1, 3, 1, "yellow"),
  ];

  addVerticalBar = [
    new Bar(3, 0, 1, 32, "yellow"),
    new Bar(7, 0, 1, 32, "yellow"),
    new Bar(12, 0, 1, 32, "yellow"),
    new Bar(21, 0, 1, 17, "yellow"),
    new Bar(24, 6, 1, 11, "yellow"),
    new Bar(28, 7, 4, 5, "yellow"),
    new Bar(18, 18, 1, 14, "yellow"),
    new Bar(25, 18, 1, 14, "yellow"),
  ];
}

function computeScale() {
  if (PRESERVE_ASPECT) {
    const s = min(width / BASE_W, height / BASE_H);
    sx = sy = s;
    const contentW = BASE_W * s;
    const contentH = BASE_H * s;
    ox = (width - contentW) / 2;
    oy = (height - contentH) / 2;
  } else {
    sx = width / BASE_W;
    sy = height / BASE_H;
    ox = 0;
    oy = 0;
  }
}

function draw() {
  computeScale();
  background(232, 232, 225, 100);
  for (const b of addHorizontalBar) b.display();
  for (const b of addVerticalBar) b.display();
}

function windowResized() {
  resizeCanvas(windowWidth, windowHeight);
  redraw();
}

